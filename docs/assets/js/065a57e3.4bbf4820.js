(self.webpackChunkwoshicai=self.webpackChunkwoshicai||[]).push([[794],{1323:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},metadata:function(){return c},toc:function(){return l},default:function(){return u}});var o=n(2122),r=n(9756),a=(n(7294),n(3905)),i={slug:"Concurrency In Go",title:"Concurrency In Go",author:"woshicai",author_title:"woshicai",author_image_url:"https://avatars.githubusercontent.com/charles-woshicai",tags:["go"]},c={permalink:"/blog/Concurrency In Go",editUrl:"https://github.com/charles-woshicai/charles-woshicai.github.io/edit/master/docs/blog/blog/concurrency-in-go.md",source:"@site/blog/concurrency-in-go.md",title:"Concurrency In Go",description:"After reading the book Concurrency In Go, in order to better understand and remember what the book says, record key point about the book.",date:"2021-05-05T16:16:32.369Z",formattedDate:"May 6, 2021",tags:[{label:"go",permalink:"/blog/tags/go"}],readingTime:2.22,truncated:!1,nextItem:{title:"Welcome",permalink:"/blog/welcome"}},l=[{value:"Charter 1. An introduction to Concurrency",id:"charter-1-an-introduction-to-concurrency",children:[{value:"Moore&#39;s Law, Web Scale, and the Mess We&#39;re In",id:"moores-law-web-scale-and-the-mess-were-in",children:[]},{value:"Why is Concurrency Hard",id:"why-is-concurrency-hard",children:[]}]},{value:"Charter 2. Modeling Your Code: Communicating Sequential Processes",id:"charter-2-modeling-your-code-communicating-sequential-processes",children:[{value:"The Difference Between Concurrency and Parallelism",id:"the-difference-between-concurrency-and-parallelism",children:[]},{value:"What Is CSP?",id:"what-is-csp",children:[]}]},{value:"Chapter 3. Go\u2019s Concurrency Building Blocks",id:"chapter-3-gos-concurrency-building-blocks",children:[]}],s={toc:l};function u(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,o.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"After reading the book ",(0,a.kt)("inlineCode",{parentName:"p"},"Concurrency In Go"),", in order to better understand and remember what the book says, record key point about the book."),(0,a.kt)("h2",{id:"charter-1-an-introduction-to-concurrency"},"Charter 1. An introduction to Concurrency"),(0,a.kt)("p",null,"\u7b2c\u4e00\u8282\u4e3b\u8981\u4ecb\u7ecd\u4e86Concurrency\u7684\u5b9a\u4e49\u4ee5\u53ca\u5386\u53f2."),(0,a.kt)("h3",{id:"moores-law-web-scale-and-the-mess-were-in"},"Moore's Law, Web Scale, and the Mess We're In"),(0,a.kt)("p",null,"\u4ecb\u7ecd\u4e86\u6469\u5c14\u5b9a\u5f8b\u4ee5\u53caAmdahl\u2019s Law\n",(0,a.kt)("a",{parentName:"p",href:"https://zh.wikipedia.org/wiki/%E6%91%A9%E5%B0%94%E5%AE%9A%E5%BE%8B"},"\u6469\u5c14\u5b9a\u5f8b"),"\n",(0,a.kt)("a",{parentName:"p",href:"https://zh.wikipedia.org/wiki/%E9%98%BF%E5%A7%86%E8%BE%BE%E5%B0%94%E5%AE%9A%E5%BE%8B"},"Amdahl\u2019s Law")),(0,a.kt)("h3",{id:"why-is-concurrency-hard"},"Why is Concurrency Hard"),(0,a.kt)("p",null,"\u4ecb\u7ecd\u51e0\u79cd\u5f15\u5165concurrency\u5e26\u6765\u7684\u901a\u7528\u95ee\u9898"),(0,a.kt)("h4",{id:"race-condition"},"Race Condition"),(0,a.kt)("p",null,"\u201cA race condition occurs when two or more operations must execute in the correct order, but the program has not been written so that this order is guaranteed to be maintained\u201d"),(0,a.kt)("p",null,"\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u4e00\u81f4\u6027\u95ee\u9898"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u4e00\u4e2a\u7b80\u5355\u7684\u53cd\u9762\u4f8b\u5b50"),(0,a.kt)("pre",{parentName:"blockquote"},(0,a.kt)("code",{parentName:"pre",className:"language-go"},'1 var data int\n2 go func() { \n3     data++\n4 }()\n5 if data == 0 {\n6     fmt.Printf("the value is %v.\\n", data)\n7 }\n'))),(0,a.kt)("h4",{id:"atomicity"},"Atomicity"),(0,a.kt)("p",null,"\u201cWhen something is considered atomic, or to have the property of atomicity, this means that within the context that it is operating, it is indivisible, or uninterruptible.\u201d"),(0,a.kt)("p",null,"\u539f\u5b50\u6027 \u4e0d\u53ef\u6253\u65ad\u7684\u6700\u5c0f\u64cd\u4f5c"),(0,a.kt)("h4",{id:"memory-access-synchronization"},"Memory Access Synchronization"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://golang.org/ref/mem"},"\u5b98\u65b9\u53c2\u8003\u8d44\u6599")),(0,a.kt)("h4",{id:"deadlocks-livelocks-and-starvation"},"Deadlocks, Livelocks, and Starvation"),(0,a.kt)("h5",{id:"deadlock"},"Deadlock"),(0,a.kt)("p",null,"\u6b7b\u9501"),(0,a.kt)("p",null,"\u5e38\u89c1\u7684\u51e0\u79cd\u573a\u666f"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Mutual Exclusion",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"A concurrent process holds exclusive rights to a resource at any one time"))),(0,a.kt)("li",{parentName:"ul"},"Wait for condition",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"A concurrent process must simultaneously hold a resource and be waiting for an additional resource."))),(0,a.kt)("li",{parentName:"ul"},"No Preemption",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"A resource held by a concurrent process can only be released by that process, so it fulfills this condition."))),(0,a.kt)("li",{parentName:"ul"},"Circular Wait",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"A concurrent process (P1) must be waiting on a chain of other concurrent processes (P2), which are in turn waiting on it (P1), so it fulfills this final condition too.")))),(0,a.kt)("h5",{id:"livelock"},"Livelock"),(0,a.kt)("p",null,"Livelocks are programs that are actively performing concurrent operations, but these operations do nothing to move the state of the program forward."),(0,a.kt)("p",null,"\u7a0b\u5e8f\u5728\u8dd1 \u4f46\u662f\u7a0b\u5e8f\u7684\u72b6\u6001\u4e00\u76f4\u505c\u7559\u5728\u539f\u5730"),(0,a.kt)("h5",{id:"starvation"},"Starvation"),(0,a.kt)("p",null,"Starvation is any situation where a concurrent process cannot get all the resources it needs to perform work."),(0,a.kt)("p",null,"\u8fc7\u591a\u7684\u7a0b\u5e8f\u5728\u7ade\u4e89\u8d44\u6e90 \u5bfc\u81f4\u8d44\u6e90\u90fd\u8017\u8d39\u5728\u8c03\u5ea6\u4e0a\u4e86 \u7ed3\u679c\u5927\u5bb6\u90fd\u5206\u4e0d\u5230\u8d44\u6e90"),(0,a.kt)("h5",{id:"determining-concurrency-safety"},"Determining Concurrency Safety"),(0,a.kt)("h4",{id:"simplicity-in-the-face-of-complexity"},"Simplicity in the Face of Complexity"),(0,a.kt)("p",null,"\u4ecb\u7ecd\u4e86\u548c\u5176\u4ed6\u53d8\u6210\u8bed\u8a00\u76f8\u6bd4 go\u5728concurrency\u8fd9\u5757\u505a\u4e86\u54ea\u4e9b\u5de5\u4f5c:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5185\u5b58\u7ba1\u7406 \u5373 gc"),(0,a.kt)("li",{parentName:"ul"},"goroutine\u8c03\u5ea6 \u62bd\u8c61\u7684goroutine\u8c03\u5ea6\u5230\u64cd\u4f5c\u7cfb\u7edf\u7684thread")),(0,a.kt)("h2",{id:"charter-2-modeling-your-code-communicating-sequential-processes"},"Charter 2. Modeling Your Code: Communicating Sequential Processes"),(0,a.kt)("h3",{id:"the-difference-between-concurrency-and-parallelism"},"The Difference Between Concurrency and Parallelism"),(0,a.kt)("p",null,"The fact that concurrency is different from parallelism is often overlooked or misunderstood. In conversations between many developers, the two terms are often used interchangeably to mean \u201csomething that runs at the same time as something else.\u201d Sometimes using the word \u201cparallel\u201d in this context is correct, but usually if the developers are discussing code, they really ought to be using the word \u201cconcurrent.\n\u5e76\u53d1\u548c\u5e76\u884c\u7684\u533a\u522b"),(0,a.kt)("h3",{id:"what-is-csp"},"What Is CSP?"),(0,a.kt)("p",null,"CSP: Communicating Sequential Processes\n",(0,a.kt)("a",{parentName:"p",href:"https://dl.acm.org/doi/10.1145/359576.359585"},"CSP Paper")),(0,a.kt)("p",null,"\u5e38\u89c4\u7684\u5e76\u53d1\u5b89\u5168\u601d\u8def\u662f\u901a\u8fc7\u5bf9\u5185\u5b58\u7684\u8bbf\u95ee\u987a\u5e8f\u505a\u6587\u7ae0\u6765\u4fdd\u8bc1\u5185\u5b58\u7684\u4e00\u81f4\u6027, CSP\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u601d\u8def, \u5e76\u53d1\u7a0b\u5e8f\u4e4b\u95f4\u901a\u8fc7\u663e\u5f0f\u7684\u8f93\u5165\u8f93\u51fa\u6765\u63a7\u5236\u6570\u636e\u7684access."),(0,a.kt)("h4",{id:"how-this-helps-you"},"How This Helps You"),(0,a.kt)("p",null,"go\u91c7\u7eb3\u4e86CSP\u7684\u601d\u8def\u6765\u5b9e\u73b0\u5e76\u53d1, \u8bde\u751f\u4e86goroutine\u548cchannel."),(0,a.kt)("h4",{id:"gos-philosophy-on-concurrency"},"Go\u2019s Philosophy on Concurrency"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://golang.org/ref/mem"},"\u5b98\u65b9\u53c2\u8003\u8d44\u6599")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u5173\u4e8e\u9009\u62e9channel\u8fd8\u662fsync\u5305\u7684\u53c2\u8003")),(0,a.kt)("hr",null),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"evernotecid://C89FDA3E-A873-421C-BFAE-498A116E39F9/appyinxiangcom/27330777/ENResource/p103",alt:"d04f6a989475155abb25e5407ce337af.png"})),(0,a.kt)("h2",{id:"chapter-3-gos-concurrency-building-blocks"},"Chapter 3. Go\u2019s Concurrency Building Blocks"))}u.isMDXComponent=!0}}]);